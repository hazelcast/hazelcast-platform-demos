<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<parent>
		<groupId>com.hazelcast.platform.demos.benchmark.nexmark</groupId>
		<artifactId>nexmark-root</artifactId>
		<version>5.4</version>
	</parent>

	<artifactId>nexmark-webapp</artifactId>

	<name>Hazelcast Platform - NEXMark - WebApp</name>
	<description>NEXMark - Hazelcast Client</description>

	<properties>
		<my.docker.image.name>webapp</my.docker.image.name>
		<my.docker.jar.file>${project.artifactId}-${project.version}.jar</my.docker.jar.file>
		<main.basedir>${project.parent.parent.parent.basedir}</main.basedir>
		<my.cluster.name>${my.cluster1.name}</my.cluster.name>

		<!-- For src/main/resources/templates/fragments.html -->
		<my.webapp.title>${project.description}</my.webapp.title>

		<!-- React.js app in src/main/app -->
		<frontend.app.dir>${project.basedir}/src/main/app</frontend.app.dir>
	</properties>

	<dependencies>
		<dependency>
			<groupId>${project.parent.groupId}</groupId>
			<artifactId>nexmark-jobs</artifactId>
			<version>${project.parent.version}</version>
		</dependency>
		<dependency>
			<groupId>com.hazelcast.platform.demos.utils</groupId>
			<artifactId>utils-miscellaneous</artifactId>
			<version>${project.parent.version}</version>
		</dependency>

		<!-- Required for YAML style Log4j2 config -->
		<dependency>
			<groupId>com.fasterxml.jackson.dataformat</groupId>
			<artifactId>jackson-dataformat-yaml</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-log4j2</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-thymeleaf</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-websocket</artifactId>
			<exclusions>
				<exclusion>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-starter-logging</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>com.github.eirslett</groupId>
				<artifactId>frontend-maven-plugin</artifactId>
				<configuration>
					<!-- Find "package.json" and create "node_modules" -->
					<workingDirectory>${frontend.app.dir}</workingDirectory>
					<!-- Install to "target" -->
					<installDirectory>${project.build.directory}</installDirectory>
					<environmentVariables>
						<SCARF_ANALYTICS>false</SCARF_ANALYTICS>
					</environmentVariables>
				</configuration>
				<executions>
					<execution>
						<id>install-node-and-npm</id>
						<goals>
							<goal>install-node-and-npm</goal>
						</goals>
						<configuration>
							<nodeVersion>${node.version}</nodeVersion>
							<npmVersion>${npm.version}</npmVersion>
						</configuration>
					</execution>
					<execution>
						<id>npm-install</id>
						<goals>
							<goal>npm</goal>
						</goals>
						<configuration>
							<arguments>install</arguments>
						</configuration>
					</execution>
					<execution>
						<id>webpack-build</id>
						<goals>
							<goal>webpack</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<phase>prepare-package</phase>
						<configuration>
							<outputDirectory>${project.build.outputDirectory}/static</outputDirectory>
							<resources>
								<resource>
									<directory>${frontend.app.dir}/static</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			<plugin>
				<groupId>io.fabric8</groupId>
				<artifactId>docker-maven-plugin</artifactId>
			</plugin>
		</plugins>
	</build>
</project>
