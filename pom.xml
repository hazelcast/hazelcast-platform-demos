<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.hazelcast.platform.demos</groupId>
	<artifactId>hazelcast-platform-demos-root</artifactId>
	<version>5.4</version>
	<packaging>pom</packaging>

	<name>Hazelcast Platform Demo Applications</name>
	<description>Hazelcast Platform Demo Applications</description>

	<modules>
		<module>banking</module>
		<module>benchmark</module>
		<!-- <module>industry</module> -->
		<module>ml</module>
		<module>retail</module>
		<module>telco</module>
		<!-- <module>travel</module> -->
		<module>utils</module>
	</modules>

	<properties>
		<!-- Control properties -->
		<build.timestamp>${maven.build.timestamp}</build.timestamp>
		<dockerfile.skip>true</dockerfile.skip>
		<failsafe.skip>true</failsafe.skip>
		<java.version>21</java.version>
		<main.basedir>${project.basedir}</main.basedir>
		<maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ss</maven.build.timestamp.format>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<!-- Reset only by "release" profile -->
		<skip.when.hz.cloud>true</skip.when.hz.cloud>
		<spotbugs.skip>true</spotbugs.skip>
		<!-- Configure the build for HZ Cloud or all Kubernetes -->
		<use.hz.cloud>true</use.hz.cloud>
		<use.hz.cloud>false</use.hz.cloud>

		<!-- Variations for the Transaction Monitor, TransactionMonitorFlavor.java ENUM -->
		<!-- "ecommerce" is last, hence is the value used, as most generally applicable -->
		<my.transaction-monitor.flavor>payments</my.transaction-monitor.flavor>
		<my.transaction-monitor.flavor>trade</my.transaction-monitor.flavor>
		<my.transaction-monitor.flavor>ecommerce</my.transaction-monitor.flavor>

		<!-- For Management Center, Cassandra/Mongo/MySQL etc logons -->
		<my.mc.admin.user>admin</my.mc.admin.user>
		<my.mc.admin.password>password1</my.mc.admin.password>
		<my.mc.license.key>${my.license.key}</my.mc.license.key>
		<my.other.admin.user>${my.mc.admin.user}</my.other.admin.user>
		<my.other.admin.password>${my.mc.admin.password}</my.other.admin.password>
		<my.other.admin.database>${my.docker.image.prefix}</my.other.admin.database>

		<!-- docker-maven-plugin does not like empty/null. Modules using the below 
			can override. -->
		<my.docker.jar.file>unset</my.docker.jar.file>
		<my.docker.jar.file1>unset</my.docker.jar.file1>
		<my.docker.jar.file2>unset</my.docker.jar.file2>
		<my.docker.jar.file3>unset</my.docker.jar.file3>
		<main.class>unset</main.class>
		<my.mc.cluster1.name>unset</my.mc.cluster1.name>
		<my.mc.cluster1.addresslist>unset</my.mc.cluster1.addresslist>
		<my.mc.cluster2.name>unset</my.mc.cluster2.name>
		<my.mc.cluster2.addresslist>unset</my.mc.cluster2.addresslist>

		<!-- Version dependencies -->
		<cassandra-driver.version>4.15.0</cassandra-driver.version>
                <cassandra-jdbc-wrapper.version>4.9.0</cassandra-jdbc-wrapper.version>
		<debezium-connector-cassandra-4.version>2.1.3.Final</debezium-connector-cassandra-4.version>
		<debezium-connector-mongodb.version>1.3.1.Final</debezium-connector-mongodb.version>
		<error_prone_annotations.version>2.18.0</error_prone_annotations.version>
		<javax-annotation.version>1.3.2</javax-annotation.version>
		<javax-validation.version>2.0.1.Final</javax-validation.version>
		<!-- See also banking/credit-value-adjustment/cpp/Dockerfile -->
		<!-- Same as version using in Hazelcast https://github.com/hazelcast/hazelcast/blob/master/pom.xml#L99 -->
		<grpc.version>1.48.0</grpc.version>
		<hazelcast.version>5.4.0</hazelcast.version>
		<hazelcast-jet-pulsar.version>0.1</hazelcast-jet-pulsar.version>
		<hibernate-validator.version>8.0.0.Final</hibernate-validator.version>
		<jackson.version>2.15.2</jackson.version>
		<json.version>20231013</json.version>
		<json-smart.version>2.4.11</json-smart.version>
		<junit-jupiter.version>5.9.3</junit-jupiter.version>
		<junit-vintage.version>5.9.3</junit-vintage.version>
		<jython.version>2.7.2</jython.version>
		<!--  Kafka Clients must match cloud target -->
		<kafka-clients.version>3.6.1</kafka-clients.version>
		<kafka-connect.version>2.6.0</kafka-connect.version>
		<logback.version>1.4.8</logback.version>
		<mariadb-java-client.version>3.1.4</mariadb-java-client.version>
		<mongo-java-driver.version>3.12.8</mongo-java-driver.version>
		<mysql-connector-j.version>8.0.33</mysql-connector-j.version>
		<netty-tcnative.version>2.0.62.Final</netty-tcnative.version>
		<poi-ooxml.version>5.2.3</poi-ooxml.version>
		<!-- Run same version with 'protoc - -grpc_out=. - -plugin=protoc-gen-grpc=/usr/local/bin/grpc_cpp_plugin' 
			banking/credit-value-adjustment/common/src/main/proto/JetToCpp.proto -->
		<proto-google-common-protos.version>2.14.3</proto-google-common-protos.version>
		<protobuf.version>3.22.1</protobuf.version>
		<pulsar.version>3.1.0</pulsar.version>
		<slf4j.version>2.0.7</slf4j.version>
		<spotbugs-annotations.version>4.7.3</spotbugs-annotations.version>
		<springdoc.version>2.3.0</springdoc.version>
		<spring-boot.version>3.2.4</spring-boot.version>
		<spring-cloud.version>2021.0.0</spring-cloud.version>
		<spring-cloud-zipkin.version>2.2.8.RELEASE</spring-cloud-zipkin.version>
		<zipkin.version>2.23.3-SNAPSHOT</zipkin.version>

		<!-- Plugins -->
		<build-helper-maven-plugin.version>3.1.0</build-helper-maven-plugin.version>
		<!-- dockerfile-maven-plugin not being updated on Maven Central, fails 
			on Mac M1 ARM chip -->
		<docker-maven-plugin.version>0.44.0</docker-maven-plugin.version>
		<exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>
		<frontend-maven-plugin.version>1.13.4</frontend-maven-plugin.version>
		<hazelcast-cloud-maven-plugin.version>0.0.6</hazelcast-cloud-maven-plugin.version>
		<maven-antrun-plugin.version>3.1.0</maven-antrun-plugin.version>
		<maven-assembly-plugin.version>3.6.0</maven-assembly-plugin.version>
		<maven-checkstyle-plugin.version>3.2.1</maven-checkstyle-plugin.version>
		<maven-clean-plugin.version>3.3.1</maven-clean-plugin.version>
		<maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
		<maven-failsafe-plugin.version>3.0.0</maven-failsafe-plugin.version>
		<maven-jar-plugin.version>3.3.0</maven-jar-plugin.version>
		<maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
		<maven-shade-plugin.version>3.4.1</maven-shade-plugin.version>
		<maven-surefire-plugin.version>3.0.0</maven-surefire-plugin.version>
		<os-maven-plugin.version>1.6.2</os-maven-plugin.version>
		<protobuf-maven-plugin.version>0.6.1</protobuf-maven-plugin.version>
		<spotbugs-maven-plugin.version>4.7.3.4</spotbugs-maven-plugin.version>

		<!-- Javascript -->
		<node.version>v21.2.0</node.version>
		<npm.version>10.2.3</npm.version>

                <!-- Checkstyle -->
                <checkstyle.version>8.38</checkstyle.version>
                <checkstyle.configLocation>${main.basedir}/checkstyle/checkstyle.xml</checkstyle.configLocation>
                <checkstyle.supressionsLocation>${main.basedir}/checkstyle/suppressions.xml</checkstyle.supressionsLocation>
                <checkstyle.headerLocation>${main.basedir}/checkstyle/ClassHeader.txt</checkstyle.headerLocation>
	</properties>

	<dependencies>
		<!-- scope==provided -->
		<dependency>
			<groupId>com.github.spotbugs</groupId>
			<artifactId>spotbugs-annotations</artifactId>
			<version>${spotbugs-annotations.version}</version>
			<scope>provided</scope>
		</dependency>

		<!-- scope==test -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit-jupiter.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>com.datastax.oss</groupId>
				<artifactId>java-driver-core</artifactId>
				<version>${cassandra-driver.version}</version>
			</dependency>

			<dependency>
				<groupId>com.ing.data</groupId>
				<artifactId>cassandra-jdbc-wrapper</artifactId>
				<version>${cassandra-jdbc-wrapper.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-annotations</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-core</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>
			<dependency>
				<groupId>com.fasterxml.jackson.datatype</groupId>
				<artifactId>jackson-datatype-jsr310</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.google.api.grpc</groupId>
				<artifactId>proto-google-common-protos</artifactId>
				<version>${proto-google-common-protos.version}</version>
			</dependency>
            <dependency>
				<groupId>com.google.errorprone</groupId>
				<artifactId>error_prone_annotations</artifactId>
				<version>${error_prone_annotations.version}</version>
			</dependency>
            <dependency>
				<groupId>com.google.protobuf</groupId>
				<artifactId>protobuf-java</artifactId>
				<version>${protobuf.version}</version>
			</dependency>

			<dependency>
				<groupId>com.hazelcast</groupId>
				<artifactId>hazelcast</artifactId>
				<version>${hazelcast.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast</groupId>
				<artifactId>hazelcast-enterprise</artifactId>
				<version>${hazelcast.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast</groupId>
				<artifactId>hazelcast-mapstore</artifactId>
				<version>${hazelcast.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast</groupId>
				<artifactId>hazelcast-spring</artifactId>
				<version>${hazelcast.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast</groupId>
				<artifactId>hazelcast-sql</artifactId>
				<version>${hazelcast.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast.jet</groupId>
				<artifactId>hazelcast-jet-cdc-debezium</artifactId>
				<version>${hazelcast.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast.jet</groupId>
				<artifactId>hazelcast-jet-cdc-postgres</artifactId>
				<version>${hazelcast.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast.jet</groupId>
				<artifactId>hazelcast-jet-cdc-mysql</artifactId>
				<version>${hazelcast.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast.jet</groupId>
				<artifactId>hazelcast-jet-grpc</artifactId>
				<version>${hazelcast.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast.jet</groupId>
				<artifactId>hazelcast-jet-kafka</artifactId>
				<version>${hazelcast.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast.jet</groupId>
				<artifactId>hazelcast-jet-mongodb</artifactId>
				<version>${hazelcast.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast.jet</groupId>
				<artifactId>hazelcast-jet-python</artifactId>
				<version>${hazelcast.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast.jet</groupId>
				<artifactId>hazelcast-jet-sql</artifactId>
				<version>${hazelcast.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast.jet.contrib</groupId>
				<artifactId>pulsar</artifactId>
				<version>${hazelcast-jet-pulsar.version}</version>
			</dependency>

			<dependency>
				<groupId>io.debezium</groupId>
				<artifactId>debezium-connector-cassandra-4</artifactId>
				<version>${debezium-connector-cassandra-4.version}</version>
			</dependency>
			<dependency>
				<groupId>io.debezium</groupId>
				<artifactId>debezium-connector-mongodb</artifactId>
				<version>${debezium-connector-mongodb.version}</version>
			</dependency>

			<dependency>
				<groupId>io.netty</groupId>
				<artifactId>netty-tcnative</artifactId>
				<version>${netty-tcnative.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>kafka-clients</artifactId>
				<version>${kafka-clients.version}</version>
				<exclusions>
					<exclusion>
						<groupId>org.slf4j</groupId>
						<artifactId>slf4j-api</artifactId>						
					</exclusion>
				</exclusions>
			</dependency>

            <dependency>
                <groupId>org.apache.pulsar</groupId>
                <artifactId>pulsar-client</artifactId>
                <version>${pulsar.version}</version>
                <exclusions>
					<exclusion>
						<groupId>javax.ws.rs</groupId>
						<artifactId>javax.ws.rs-api</artifactId>
					</exclusion>
				</exclusions>
            </dependency>

			<dependency>
				<groupId>org.mariadb.jdbc</groupId>
				<artifactId>mariadb-java-client </artifactId>
				<version>${mariadb-java-client.version}</version>
			</dependency>

			<dependency>
				<groupId>org.springdoc</groupId>
				<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
				<version>${springdoc.version}</version>
			</dependency>

			<dependency>
				<groupId>javax.annotation</groupId>
				<artifactId>javax.annotation-api</artifactId>
				<version>${javax-annotation.version}</version>
			</dependency>
			<dependency>
				<groupId>javax.validation</groupId>
				<artifactId>validation-api</artifactId>
				<version>${javax-validation.version}</version>
			</dependency>

			<dependency>
				<groupId>com.mysql</groupId>
				<artifactId>mysql-connector-j</artifactId>
				<version>${mysql-connector-j.version}</version>
				<exclusions>
				    <exclusion>
					<groupId>com.google.protobuf</groupId>
					<artifactId>protobuf-java</artifactId>
				    </exclusion>
				</exclusions>
			</dependency>

			<dependency>
				<groupId>net.minidev</groupId>
				<artifactId>json-smart</artifactId>
				<version>${json-smart.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>connect-api</artifactId>
				<version>${kafka-connect.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>${poi-ooxml.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hibernate.validator</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate-validator.version}</version>
			</dependency>

			<dependency>
				<groupId>org.json</groupId>
				<artifactId>json</artifactId>
				<version>${json.version}</version>
			</dependency>

			<dependency>
				<groupId>org.junit.vintage</groupId>
				<artifactId>junit-vintage-engine</artifactId>
				<version>${junit-vintage.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.mongodb</groupId>
				<artifactId>mongo-java-driver</artifactId>
				<version>${mongo-java-driver.version}</version>
			</dependency>

			<dependency>
				<groupId>org.python</groupId>
				<artifactId>jython</artifactId>
				<version>${jython.version}</version>
			</dependency>

			<!-- scope==test -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-test</artifactId>
				<version>${spring-boot.version}</version>
				<scope>test</scope>
				<exclusions>
					<exclusion>
						<groupId>org.junit.vintage</groupId>
						<artifactId>junit-vintage-engine</artifactId>
					</exclusion>
				</exclusions>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<repositories>
		<repository>
			<id>Hazelcast Private Release Repository</id>
			<url>https://repository.hazelcast.com/release/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>Hazelcast Private Snapshot Repository</id>
			<url>https://repository.hazelcast.com/snapshot/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>interval:720</updatePolicy>
			</snapshots>
		</repository>
		<repository>
			<id>Hazelcast Public Snapshot Repository</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>interval:720</updatePolicy>
			</snapshots>
		</repository>
	</repositories>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
					<release>${java.version}</release>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven-failsafe-plugin.version}</version>
				<configuration>
					<skipITs>${failsafe.skip}</skipITs>
				</configuration>
				<executions>
					<execution>
						<!-- No default phase to avoid collision with Spring Boot and Dockerfile -->
						<phase>package</phase>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>${spotbugs-maven-plugin.version}</version>
				<configuration>
					<effort>Max</effort>
					<excludeFilterFile>${main.basedir}/spotbugs/excludes.xml</excludeFilterFile>
					<threshold>Low</threshold>
				</configuration>
				<executions>
					<execution>
						<phase>test</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-antrun-plugin</artifactId>
					<version>${maven-antrun-plugin.version}</version>
					<executions>
						<execution>
							<phase>package</phase>
							<id>default</id>
							<goals>
								<goal>run</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-assembly-plugin</artifactId>
					<version>${maven-assembly-plugin.version}</version>
					<configuration>
						<archive>
							<manifest>
								<mainClass>${main.class}</mainClass>
							</manifest>
						</archive>
						<descriptors>
							<descriptor>${main.basedir}/assemble/assembly.xml</descriptor>
						</descriptors>
						<tarLongFileMode>posix</tarLongFileMode>
					</configuration>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
					<configuration>
						<filesets>
							<fileset>
								<directory>src/main/app</directory>
                                                                <includes>
                                                                        <include>*.wasm</include>
                                                                        <include>package-lock.json</include>
                                                                        <include>perspective.worker.js</include>
                                                                </includes>
							</fileset>
							<fileset>
								<directory>src/main/app/build</directory>
							</fileset>
							<fileset>
								<directory>src/main/app/node_modules</directory>
							</fileset>
							<fileset>
								<directory>src/main/app/static</directory>
							</fileset>
							<fileset>
								<directory>src/main/resources</directory>
                                                                <includes>
                                                                	<include>bin</include>
                                                                	<include>obj</include>
                                                                </includes>
							</fileset>
						</filesets>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
					<configuration>
						<encoding>UTF-8</encoding>
						<propertiesEncoding>UTF-8</propertiesEncoding>
					</configuration>
				</plugin>
				<plugin>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${maven-shade-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.github.eirslett</groupId>
					<artifactId>frontend-maven-plugin</artifactId>
					<version>${frontend-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.hazelcast.cloud</groupId>
					<artifactId>hazelcast-cloud-maven-plugin</artifactId>
					<version>${hazelcast-cloud-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>io.fabric8</groupId>
					<artifactId>docker-maven-plugin</artifactId>
					<version>${docker-maven-plugin.version}</version>
					<configuration>
                        <imagePullPolicy>IFNOTPRESENT</imagePullPolicy>
                        <images>
                            <image>
								<build>
                    				<args>
										<!-- Hazelcast cloud -->
										<HZ_CLOUD_CLUSTER1_DISCOVERY_TOKEN>${my.hz.cloud.cluster1.discovery.token}</HZ_CLOUD_CLUSTER1_DISCOVERY_TOKEN>
										<HZ_CLOUD_CLUSTER1_ID>${my.hz.cloud.cluster1.id}</HZ_CLOUD_CLUSTER1_ID>
										<HZ_CLOUD_CLUSTER1_NAME>${my.hz.cloud.cluster1.name}</HZ_CLOUD_CLUSTER1_NAME>
										<HZ_CLOUD_CLUSTER1_KEYS_LOCATION>${my.hz.cloud.cluster1.keys.location}</HZ_CLOUD_CLUSTER1_KEYS_LOCATION>
										<HZ_CLOUD_CLUSTER1_KEY_PASSWORD>${my.hz.cloud.cluster1.key.password}</HZ_CLOUD_CLUSTER1_KEY_PASSWORD>
										<!-- Dockerfile will use for our built modules -->
										<CONTROL_FILE>${my.docker.control.file}</CONTROL_FILE>
										<FLAVOR>${my.transaction-monitor.flavor}</FLAVOR>
										<JAR_FILE>${my.docker.jar.file}</JAR_FILE>
										<JAR_FILE1>${my.docker.jar.file1}</JAR_FILE1>
										<JAR_FILE2>${my.docker.jar.file2}</JAR_FILE2>
										<JAR_FILE3>${my.docker.jar.file3}</JAR_FILE3>
										<MAIN_CLASS>${main.class}</MAIN_CLASS>
										<!-- Dockerfile uses for Management Center. -->
										<MC_LICENSE>${my.mc.license.key}</MC_LICENSE>
										<!-- Preconfigured connections -->
										<MC_CLUSTER1_NAME>${my.mc.cluster1.name}</MC_CLUSTER1_NAME>
										<MC_CLUSTER1_ADDRESSLIST>${my.mc.cluster1.addresslist}</MC_CLUSTER1_ADDRESSLIST>
										<MC_CLUSTER2_NAME>${my.mc.cluster2.name}</MC_CLUSTER2_NAME>
										<MC_CLUSTER2_ADDRESSLIST>${my.mc.cluster2.addresslist}</MC_CLUSTER2_ADDRESSLIST>
										<!-- Dockerfile uses for other tools -->
										<MY_ADMINUSER>${my.mc.admin.user}</MY_ADMINUSER>
										<MY_ADMINPASSWORD>${my.mc.admin.password}</MY_ADMINPASSWORD>
										<MY_OTHERUSER>${my.other.admin.user}</MY_OTHERUSER>
										<MY_OTHERPASSWORD>${my.other.admin.password}</MY_OTHERPASSWORD>
										<MY_OTHERDATABASE>${my.other.admin.database}</MY_OTHERDATABASE>
									</args>
									<buildx>
										<platforms>
											<platform>linux/arm64</platform>
											<platform>linux/x86_64</platform>
											<platform>linux/amd64</platform>
										</platforms>
									</buildx>
									<createImageOptions>
										<platform>linux/x86_64</platform>
									</createImageOptions>
									<dockerFile>${project.basedir}/Dockerfile</dockerFile>
								</build>
                                <name>hazelcast-platform-demos/${my.docker.image.prefix}-${my.docker.image.name}</name>								
                            </image>
                        </images>
						<skip>${dockerfile.skip}</skip>
                        <verbose>true</verbose>
                    </configuration>
					<executions>
						<execution>
							<phase>package</phase>
							<id>default</id>
							<goals>
								<goal>build</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>${exec-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${build-helper-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<profiles>
		<profile>
			<!-- docker-maven-plugin does not like null properties -->
			<id>no-null-docker-maven-plugin-slack-bot-user-oath-access-token</id>
			<properties>
				<my.slack.bot.user.oath.access.token>unset</my.slack.bot.user.oath.access.token>
			</properties>
			<activation>
				<property>
					<name>!my.slack.bot.user.oath.access.token</name>
				</property>
			</activation>
		</profile>
		<profile>
			<!-- docker-maven-plugin does not like null properties -->
			<id>no-null-docker-maven-plugin-slack-bot-channel-id</id>
			<properties>
				<my.slack.bot.channel.id>unset</my.slack.bot.channel.id>
			</properties>
			<activation>
				<property>
					<name>!my.slack.bot.channel.id</name>
				</property>
			</activation>
		</profile>
		<profile>
			<!-- docker-maven-plugin does not like null properties -->
			<id>no-null-docker-maven-plugin-slack-bot-channel-name</id>
			<properties>
				<my.slack.bot.channel.name>unset</my.slack.bot.channel.name>
			</properties>
			<activation>
				<property>
					<name>!my.slack.bot.channel.name</name>
				</property>
			</activation>
		</profile>
		<profile>
			<!-- docker-maven-plugin does not like null properties -->
			<id>no-null-docker-maven-plugin-license-key</id>
			<properties>
				<my.license.key>unset</my.license.key>
			</properties>
			<activation>
				<property>
					<name>!my.license.key</name>
				</property>
			</activation>
		</profile>
		<profile>
			<!-- docker-maven-plugin does not like null properties -->
			<id>no-null-docker-maven-plugin-hz.cloud-cluster1-id</id>
			<properties>
				<my.hz.cloud.cluster1.id>unset</my.hz.cloud.cluster1.id>
			</properties>
			<activation>
				<property>
					<name>!my.hz.cloud.cluster1.id</name>
				</property>
			</activation>
		</profile>
		<profile>
			<!-- docker-maven-plugin does not like null properties -->
			<id>no-null-docker-maven-plugin-hz.cloud-cluster1-name</id>
			<properties>
				<my.hz.cloud.cluster1.name>unset</my.hz.cloud.cluster1.name>
			</properties>
			<activation>
				<property>
					<name>!my.hz.cloud.cluster1.name</name>
				</property>
			</activation>
		</profile>
		<profile>
			<!-- docker-maven-plugin does not like null properties -->
			<id>no-null-docker-maven-plugin-hz.cloud-cluster1-discovery-token</id>
			<properties>
				<my.hz.cloud.cluster1.discovery.token>unset</my.hz.cloud.cluster1.discovery.token>
			</properties>
			<activation>
				<property>
					<name>!my.hz.cloud.cluster1.discovery.token</name>
				</property>
			</activation>
		</profile>
		<profile>
			<!-- docker-maven-plugin does not like null properties -->
			<id>no-null-docker-maven-plugin-hz.cloud-cluster1-key-password</id>
			<properties>
				<my.hz.cloud.cluster1.key.password>unset</my.hz.cloud.cluster1.key.password>
			</properties>
			<activation>
				<property>
					<name>!my.hz.cloud.cluster1.key.password</name>
				</property>
			</activation>
		</profile>
		<profile>
			<!-- docker-maven-plugin does not like null properties -->
			<id>no-null-docker-maven-plugin-hz.cloud-cluster1-keys-location</id>
			<properties>
				<my.hz.cloud.cluster1.keys.location>unset</my.hz.cloud.cluster1.keys.location>
			</properties>
			<activation>
				<property>
					<name>!my.hz.cloud.cluster1.keys.location</name>
				</property>
			</activation>
		</profile>
		<profile>
			<!-- docker-maven-plugin does not like null properties -->
			<id>no-null-docker-maven-plugin-hz.cloud-cluster1-api-key</id>
			<properties>
				<my.hz.cloud.api.key>unset</my.hz.cloud.api.key>
			</properties>
			<activation>
				<property>
					<name>!my.hz.cloud.api.key</name>
				</property>
			</activation>
		</profile>
		<profile>
			<!-- docker-maven-plugin does not like null properties -->
			<id>no-null-docker-maven-plugin-hz.cloud-cluster1-api-secret</id>
			<properties>
				<my.hz.cloud.api.secret>unset</my.hz.cloud.api.secret>
			</properties>
			<activation>
				<property>
					<name>!my.hz.cloud.api.secret</name>
				</property>
			</activation>
		</profile>
		<profile>
			<!-- For Jenkins, all validation sections except Docker build -->
			<id>jenkins</id>
			<properties>
				<dockerfile.skip>true</dockerfile.skip>
				<failsafe.skip>false</failsafe.skip>
				<spotbugs.skip>false</spotbugs.skip>
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>${maven-checkstyle-plugin.version}</version>
						<configuration>
							<configLocation>checkstyle/checkstyle.xml</configLocation>
							<headerLocation>checkstyle/ClassHeader.txt</headerLocation>
							<suppressionsLocation>checkstyle/suppressions.xml</suppressionsLocation>
							<consoleOutput>true</consoleOutput>
							<failsOnError>true</failsOnError>
							<failOnViolation>true</failOnViolation>
							<includeTestSourceDirectory>true</includeTestSourceDirectory>
							<propertyExpansion>main.basedir=${main.basedir}</propertyExpansion>
						</configuration>
						<executions>
							<execution>
								<phase>validate</phase>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- Full release, logically Jenkins profile plus Docker, done this way 
				as cannot inherit profiles -->
			<id>release</id>
			<properties>
				<dockerfile.skip>false</dockerfile.skip>
				<failsafe.skip>false</failsafe.skip>
				<spotbugs.skip>false</spotbugs.skip>
				<skip.when.hz.cloud>${use.hz.cloud}</skip.when.hz.cloud>
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>${maven-checkstyle-plugin.version}</version>
						<configuration>
							<configLocation>checkstyle/checkstyle.xml</configLocation>
							<headerLocation>checkstyle/ClassHeader.txt</headerLocation>
							<suppressionsLocation>checkstyle/suppressions.xml</suppressionsLocation>
							<consoleOutput>true</consoleOutput>
							<failsOnError>true</failsOnError>
							<failOnViolation>true</failOnViolation>
							<includeTestSourceDirectory>true</includeTestSourceDirectory>
							<propertyExpansion>main.basedir=${main.basedir}</propertyExpansion>
						</configuration>
						<executions>
							<execution>
								<phase>validate</phase>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>hz.cloud</id>
			<activation>
				<property>
					<name>use.hz.cloud</name>
					<value>true</value>
				</property>
			</activation>
			<properties>
				<!-- See https://github.com/hazelcast/hazelcast-cloud-maven-plugin/issues/26
				<dockerfile.skip>false</dockerfile.skip>
				-->
			</properties>
		</profile>
	</profiles>
</project>
