<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.hazelcast.platform.demos</groupId>
	<artifactId>hazelcast-platform-demos-root</artifactId>
	<version>4.0</version>
	<packaging>pom</packaging>

	<name>Hazelcast Platform Demo Applications</name>
	<description>Hazelcast Platform Demo Applications</description>

	<modules>
		<module>banking</module>
		<module>ml</module>
		<module>telco</module>
	</modules>

	<properties>
		<!-- Control properties -->
		<build.timestamp>${maven.build.timestamp}</build.timestamp>
		<dockerfile.skip>true</dockerfile.skip>
		<failsafe.skip>true</failsafe.skip>
		<java.version>11</java.version>
		<main.basedir>${project.basedir}</main.basedir>
		<maven.build.timestamp.format>yyyy-MM-dd'T'HH:mm:ss</maven.build.timestamp.format>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<spotbugs.skip>true</spotbugs.skip>

		<!-- Version dependencies - ${project.version} should track Hazelcast version -->
                <cassandra-driver.version>3.5.0</cassandra-driver.version>
                <debezium-connector-cassandra.version>1.4.0.Alpha1</debezium-connector-cassandra.version>
                <debezium-connector-mongodb.version>1.3.1.Final</debezium-connector-mongodb.version>
		<java-annotation.version>1.3.2</java-annotation.version>
		<guava.version>29.0-jre</guava.version>
                <!-- Matches banking/credit-value-adjustment/cpp/Dockerfile2 -->
		<grpc.version>1.31.1</grpc.version>
		<hazelcast.version>4.1.1-SNAPSHOT</hazelcast.version>
		<hazelcast-jet.version>4.4-SNAPSHOT</hazelcast-jet.version>
		<hazelcast-jet-spring-boot-starter.version>2.0.0</hazelcast-jet-spring-boot-starter.version>
		<hazelcast-kubernetes.version>2.2.1</hazelcast-kubernetes.version>
		<hibernate-validator.version>6.1.2.Final</hibernate-validator.version>
		<jackson.version>2.11.3</jackson.version>
		<json.version>20190722</json.version>
                <json-smart.version>2.3</json-smart.version>
		<junit-jupiter.version>5.7.0</junit-jupiter.version>
		<junit-vintage.version>5.7.0</junit-vintage.version>
		<jython.version>2.7.2rc1</jython.version>
		<kafka-clients.version>2.4.0</kafka-clients.version>
		<kafka-connect.version>2.6.0</kafka-connect.version>
 		<mongo-java-driver.version>3.12.7</mongo-java-driver.version>
		<poi-ooxml.version>4.1.2</poi-ooxml.version>
                <!-- Run same version with 'protoc - -grpc_out=. - -plugin=protoc-gen-grpc=/usr/local/bin/grpc_cpp_plugin' 
                     banking/credit-value-adjustment/common/src/main/proto/JetToCpp.proto -->
		<protobuf.version>3.12.2</protobuf.version>
	 	<!-- See https://github.com/hazelcast/hazelcast-jet-contrib/issues/99 -->
		<spring-boot.version>2.4.0</spring-boot.version>
		<spring-boot.version>2.3.6.RELEASE</spring-boot.version>
		<springfox-swagger.version>2.9.2</springfox-swagger.version>

		<!-- Plugins -->
		<build-helper-maven-plugin.version>3.1.0</build-helper-maven-plugin.version>
		<dockerfile-maven-plugin.version>1.4.13</dockerfile-maven-plugin.version>
		<exec-maven-plugin.version>1.6.0</exec-maven-plugin.version>
		<frontend-maven-plugin.version>1.9.1</frontend-maven-plugin.version>
		<maven-antrun-plugin.version>1.8</maven-antrun-plugin.version>
		<maven-checkstyle-plugin.version>3.1.0</maven-checkstyle-plugin.version>
		<maven-clean-plugin.version>3.1.0</maven-clean-plugin.version>
		<maven-compiler-plugin.version>3.8.1</maven-compiler-plugin.version>
		<maven-deploy-plugin.version>3.0.0-M1</maven-deploy-plugin.version>
		<maven-failsafe-plugin.version>3.0.0-M5</maven-failsafe-plugin.version>
		<maven-jar-plugin.version>3.2.0</maven-jar-plugin.version>
		<maven-resources-plugin.version>3.1.0</maven-resources-plugin.version>
		<maven-shade-plugin.version>3.2.2</maven-shade-plugin.version>
		<maven-surefire-plugin.version>3.0.0-M5</maven-surefire-plugin.version>
		<os-maven-plugin.version>1.6.2</os-maven-plugin.version>
		<protobuf-maven-plugin.version>0.6.1</protobuf-maven-plugin.version>
		<spotbugs-maven-plugin.version>3.1.12.2</spotbugs-maven-plugin.version>

		<!-- Environments -->
		<!-- Google Cloud -->
		<gcp.project>NAME GOES HERE</gcp.project>
		<gcp.registry>gcr.io</gcp.registry>
	</properties>

	<dependencies>
		<!-- scope==test -->
		<dependency>
			<groupId>org.junit.jupiter</groupId>
			<artifactId>junit-jupiter-engine</artifactId>
			<version>${junit-jupiter.version}</version>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<dependencyManagement>
		<dependencies>
			<dependency>
  	                    <groupId>com.datastax.cassandra</groupId>
    	                    <artifactId>cassandra-driver-core</artifactId>
                            <version>${cassandra-driver.version}</version>
			</dependency>

			<dependency>
				<groupId>com.fasterxml.jackson.core</groupId>
				<artifactId>jackson-databind</artifactId>
				<version>${jackson.version}</version>
			</dependency>

			<dependency>
				<groupId>com.google.guava</groupId>
				<artifactId>guava</artifactId>
				<version>${guava.version}</version>
			</dependency>
			<dependency>
				<groupId>com.google.protobuf</groupId>
				<artifactId>protobuf-java</artifactId>
				<version>${protobuf.version}</version>
			</dependency>

			<dependency>
				<groupId>com.hazelcast</groupId>
				<artifactId>hazelcast</artifactId>
				<version>${hazelcast.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast</groupId>
				<artifactId>hazelcast-enterprise</artifactId>
				<version>${hazelcast.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast</groupId>
				<artifactId>hazelcast-kubernetes</artifactId>
				<version>${hazelcast-kubernetes.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast</groupId>
				<artifactId>hazelcast-sql</artifactId>
				<version>${hazelcast.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast.jet</groupId>
				<artifactId>hazelcast-jet</artifactId>
				<version>${hazelcast-jet.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast.jet</groupId>
				<artifactId>hazelcast-jet-cdc-debezium</artifactId>
				<version>${hazelcast-jet.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast.jet</groupId>
				<artifactId>hazelcast-jet-cdc-mysql</artifactId>
				<version>${hazelcast-jet.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast.jet</groupId>
				<artifactId>hazelcast-jet-enterprise</artifactId>
				<version>${hazelcast-jet.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast.jet</groupId>
				<artifactId>hazelcast-jet-grpc</artifactId>
				<version>${hazelcast-jet.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast.jet</groupId>
				<artifactId>hazelcast-jet-kafka</artifactId>
				<version>${hazelcast-jet.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast.jet</groupId>
				<artifactId>hazelcast-jet-python</artifactId>
				<version>${hazelcast-jet.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast.jet</groupId>
				<artifactId>hazelcast-jet-sql</artifactId>
				<version>${hazelcast-jet.version}</version>
			</dependency>
			<dependency>
				<groupId>com.hazelcast.jet.contrib</groupId>
				<artifactId>hazelcast-jet-spring-boot-starter</artifactId>
				<version>${hazelcast-jet-spring-boot-starter.version}</version>
			</dependency>

			<dependency>
				<groupId>io.debezium</groupId>
				<artifactId>debezium-connector-cassandra</artifactId>
				<version>${debezium-connector-cassandra.version}</version>
			</dependency>
			<dependency>
				<groupId>io.debezium</groupId>
				<artifactId>debezium-connector-mongodb</artifactId>
				<version>${debezium-connector-mongodb.version}</version>
			</dependency>

			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger2</artifactId>
				<version>${springfox-swagger.version}</version>
			</dependency>
			<dependency>
				<groupId>io.springfox</groupId>
				<artifactId>springfox-swagger-ui</artifactId>
				<version>${springfox-swagger.version}</version>
			</dependency>

			<dependency>
    	        <groupId>javax.annotation</groupId>
        	    <artifactId>javax.annotation-api</artifactId>
        	    <version>${java-annotation.version}</version>
			</dependency>

			<dependency>
				<groupId>net.minidev</groupId>
				<artifactId>json-smart</artifactId>
				<version>${json-smart.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.kafka</groupId>
				<artifactId>connect-api</artifactId>
				<version>${kafka-connect.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.poi</groupId>
				<artifactId>poi-ooxml</artifactId>
				<version>${poi-ooxml.version}</version>
			</dependency>

			<dependency>
				<groupId>org.hibernate.validator</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>${hibernate-validator.version}</version>
			</dependency>

			<dependency>
				<groupId>org.json</groupId>
				<artifactId>json</artifactId>
				<version>${json.version}</version>
			</dependency>

			<dependency>
				<groupId>org.junit.vintage</groupId>
				<artifactId>junit-vintage-engine</artifactId>
				<version>${junit-vintage.version}</version>
				<scope>test</scope>
			</dependency>

			<dependency>
				<groupId>org.mongodb</groupId>
				<artifactId>mongo-java-driver</artifactId>
				<version>${mongo-java-driver.version}</version>
			</dependency>

			<dependency>
				<groupId>org.python</groupId>
				<artifactId>jython</artifactId>
				<version>${jython.version}</version>
			</dependency>

            <!-- scope==test -->
            <dependency>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-starter-test</artifactId>
                <version>${spring-boot.version}</version>
                <scope>test</scope>
                <exclusions>
                    <exclusion>
                        <groupId>org.junit.vintage</groupId>
                        <artifactId>junit-vintage-engine</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>
		</dependencies>
	</dependencyManagement>

	<repositories>
		<repository>
			<id>Hazelcast Private Release Repository</id>
			<url>https://repository.hazelcast.com/release/</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
		<repository>
			<id>Hazelcast Private Snapshot Repository</id>
			<url>https://repository.hazelcast.com/snapshot/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>interval:720</updatePolicy>
			</snapshots>
		</repository>
		<repository>
			<id>Hazelcast Public Snapshot Repository</id>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
				<updatePolicy>interval:720</updatePolicy>
			</snapshots>
		</repository>
	</repositories>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>${maven-antrun-plugin.version}</version>
				<executions>
					<execution>
						<phase>package</phase>
						<id>default</id>
						<goals>
							<goal>run</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven-compiler-plugin.version}</version>
				<configuration>
					<encoding>${project.build.sourceEncoding}</encoding>
					<source>${java.version}</source>
					<target>${java.version}</target>
				</configuration>
			</plugin>
			<plugin>
				<artifactId>maven-failsafe-plugin</artifactId>
				<version>${maven-failsafe-plugin.version}</version>
				<configuration>
					<skipITs>${failsafe.skip}</skipITs>
				</configuration>
				<executions>
					<execution>
						<!-- No default phase to avoid collision with Spring Boot and Dockerfile -->
						<phase>package</phase>
						<goals>
							<goal>integration-test</goal>
							<goal>verify</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${maven-surefire-plugin.version}</version>
			</plugin>
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>${spotbugs-maven-plugin.version}</version>
				<configuration>
					<effort>Max</effort>
					<excludeFilterFile>${main.basedir}/spotbugs/excludes.xml</excludeFilterFile>
					<threshold>Low</threshold>
				</configuration>
				<executions>
					<execution>
						<phase>test</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
		<pluginManagement>
			<plugins>
				<plugin>
					<artifactId>maven-assembly-plugin</artifactId>
					<configuration>
						<archive>
							<manifest>
								<mainClass>${main.class}</mainClass>
							</manifest>
						</archive>
						<descriptorRefs>
							<descriptorRef>jar-with-dependencies</descriptorRef>
						</descriptorRefs>
						<tarLongFileMode>posix</tarLongFileMode>
					</configuration>
					<executions>
						<execution>
							<phase>package</phase>
							<goals>
								<goal>single</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<artifactId>maven-clean-plugin</artifactId>
					<version>${maven-clean-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-deploy-plugin</artifactId>
					<version>${maven-deploy-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-jar-plugin</artifactId>
					<version>${maven-jar-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
				</plugin>
				<plugin>
					<artifactId>maven-shade-plugin</artifactId>
					<version>${maven-shade-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.github.eirslett</groupId>
					<artifactId>frontend-maven-plugin</artifactId>
					<version>${frontend-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>com.spotify</groupId>
					<artifactId>dockerfile-maven-plugin</artifactId>
					<version>${dockerfile-maven-plugin.version}</version>
					<configuration>
						<buildArgs>
							<!-- Dockerfile will use for our built modules -->
							<JAR_FILE>${docker.jar.file}</JAR_FILE>
							<!-- Dockerfile uses for Management Center. -->
							<MC_ADMINUSER>${my.mc.admin.user}</MC_ADMINUSER>
							<MC_ADMINPASSWORD>${my.mc.admin.password}</MC_ADMINPASSWORD>
							<MC_LICENSE>${my.mc.license.key}</MC_LICENSE>
							<!-- Preconfigured connections -->
							<MC_CLUSTER1_NAME>${my.mc.cluster1.name}</MC_CLUSTER1_NAME>
							<MC_CLUSTER1_ADDRESSLIST>${my.mc.cluster1.addresslist}</MC_CLUSTER1_ADDRESSLIST>
							<MC_CLUSTER2_NAME>${my.mc.cluster2.name}</MC_CLUSTER2_NAME>
							<MC_CLUSTER2_ADDRESSLIST>${my.mc.cluster2.addresslist}</MC_CLUSTER2_ADDRESSLIST>
                                                        <!-- Dockerfile uses for other tools -->
                                                        <MY_OTHERUSER>${my.other.admin.user}</MY_OTHERUSER>
                                                        <MY_OTHERPASSWORD>${my.other.admin.password}</MY_OTHERPASSWORD>
                                                        <MY_OTHERDATABASE>${my.other.admin.database}</MY_OTHERDATABASE>
						</buildArgs>
						<dockerfile>Dockerfile</dockerfile>
						<pullNewerImage>false</pullNewerImage>
						<repository>hazelcast-platform-demos/${docker.image.prefix}-${docker.image.name}</repository>
						<tag>latest</tag>
					</configuration>
					<executions>
						<execution>
							<phase>package</phase>
							<id>default</id>
							<goals>
								<goal>build</goal>
							</goals>
						</execution>
						<!-- <execution> <phase>package</phase> <id>tag-for-gcp</id> <goals> 
							<goal>tag</goal> </goals> <configuration> <repository>${gcp.registry}/${gcp.project}/${docker.image.prefix}/${docker.image.name}</repository> 
							</configuration> </execution> <execution> <phase>deploy</phase> <id>deploy-to-gcp</id> 
							<goals> <goal>push</goal> </goals> <configuration> <repository>${gcp.registry}/${gcp.project}/${docker.image.prefix}/${docker.image.name}</repository> 
							</configuration> </execution> -->
					</executions>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>${exec-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>build-helper-maven-plugin</artifactId>
					<version>${build-helper-maven-plugin.version}</version>
				</plugin>
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
					<version>${spring-boot.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>repackage</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<distributionManagement>
		<repository>
			<id>gcr.io</id>
			<url>https://gcr.io/hazelcast-33</url>
		</repository>
	</distributionManagement>

	<profiles>
		<profile>
			<!-- For Jenkins, all validation sections except Docker build -->
			<id>jenkins</id>
			<properties>
				<dockerfile.skip>true</dockerfile.skip>
				<failsafe.skip>false</failsafe.skip>
				<spotbugs.skip>false</spotbugs.skip>
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>${maven-checkstyle-plugin.version}</version>
						<configuration>
							<configLocation>checkstyle/checkstyle.xml</configLocation>
							<headerLocation>checkstyle/ClassHeader.txt</headerLocation>
							<suppressionsLocation>checkstyle/suppressions.xml</suppressionsLocation>
							<consoleOutput>true</consoleOutput>
							<failsOnError>true</failsOnError>
							<failOnViolation>true</failOnViolation>
							<includeTestSourceDirectory>true</includeTestSourceDirectory>
							<propertyExpansion>main.basedir=${main.basedir}</propertyExpansion>
						</configuration>
						<executions>
							<execution>
								<phase>validate</phase>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<!-- Full release, logically Jenkins profile plus Docker, done this way as cannot inherit profiles -->
			<id>release</id>
			<properties>
				<dockerfile.skip>false</dockerfile.skip>
				<failsafe.skip>false</failsafe.skip>
				<spotbugs.skip>false</spotbugs.skip>
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-checkstyle-plugin</artifactId>
						<version>${maven-checkstyle-plugin.version}</version>
						<configuration>
							<configLocation>checkstyle/checkstyle.xml</configLocation>
							<headerLocation>checkstyle/ClassHeader.txt</headerLocation>
							<suppressionsLocation>checkstyle/suppressions.xml</suppressionsLocation>
							<consoleOutput>true</consoleOutput>
							<failsOnError>true</failsOnError>
							<failOnViolation>true</failOnViolation>
							<includeTestSourceDirectory>true</includeTestSourceDirectory>
							<propertyExpansion>main.basedir=${main.basedir}</propertyExpansion>
						</configuration>
						<executions>
							<execution>
								<phase>validate</phase>
								<goals>
									<goal>check</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
