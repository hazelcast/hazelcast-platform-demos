---
# OPTIONAL
# OPTIONAL
# OPTIONAL - If not running on HZ Cloud
# OPTIONAL
# OPTIONAL
---
# Service DNS will be "transaction-monitor-FLAVOR-grid1-hazelcast.default.svc.cluster.local".
# Service DNS for Prometheus will be "transaction-monitor-FLAVOR-prometheus.default.svc.cluster.local".
# Service DNS for Grafana will be "transaction-monitor-FLAVOR-grafana.default.svc.cluster.local".
---
apiVersion: v1
kind: Service
metadata:
  name: transaction-monitor-FLAVOR-grid1-hazelcast
spec:
  clusterIP: None
  selector:
    app: transaction-monitor-FLAVOR-grid1-hazelcast
  ports:
  - port: 5701
---
# Open Kubernetes to allow remote client to connect from outside, eg. Desktop to run "hz-cli" to submit ML
---
apiVersion: v1
kind: Service
metadata:
  name: transaction-monitor-FLAVOR-grid1-hazelcast-extra
spec:
  selector:
    app: transaction-monitor-FLAVOR-grid1-hazelcast
  ports:
  - port: 5701
  type: LoadBalancer
---
# Service DNS will be "transaction-monitor-FLAVOR-grid2-hazelcast.default.svc.cluster.local".
---
apiVersion: v1
kind: Service
metadata:
  name: transaction-monitor-FLAVOR-grid2-hazelcast
spec:
  clusterIP: None
  selector:
    app: transaction-monitor-FLAVOR-grid2-hazelcast
  ports:
  - port: 5701
---
# Service DNS will be "transaction-monitor-FLAVOR-mancenter.default.svc.cluster.local".
---
# Management Center
---
apiVersion: v1
kind: Service
metadata:
  name: transaction-monitor-FLAVOR-management-center
spec:
  selector:
    app: transaction-monitor-FLAVOR-management-center
  ports:
    - name: transaction-monitor-FLAVOR-management-center
      port: 8080
      targetPort: 8080
  type: LoadBalancer
---
---
# Persistent volumes, for tiered store
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: transaction-monitor-FLAVOR-grid1-hazelcast-pv
  labels:
    type: local
spec:
  capacity:
    storage: 48Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/var/lib/data/grid1"
  persistentVolumeReclaimPolicy: Delete
  storageClassName: manual
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: transaction-monitor-FLAVOR-grid2-hazelcast-pv
  labels:
    type: local
spec:
  capacity:
    storage: 48Gi
  accessModes:
    - ReadWriteMany
  hostPath:
    path: "/var/lib/data/grid2"
  persistentVolumeReclaimPolicy: Delete
  storageClassName: manual
---
---
# Persisted Volume claims
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: transaction-monitor-FLAVOR-grid1-hazelcast-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 8Gi
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: transaction-monitor-FLAVOR-grid2-hazelcast-pv-claim
spec:
  storageClassName: manual
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 8Gi
---
---
# Creates 3 pods, bigger than DR
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: transaction-monitor-FLAVOR-grid1-hazelcast
spec:
  replicas: 3
  serviceName: transaction-monitor-FLAVOR-grid1-hazelcast
  selector:
    matchLabels:
      app: transaction-monitor-FLAVOR-grid1-hazelcast
  template:
    metadata:
      labels:
        app: transaction-monitor-FLAVOR-grid1-hazelcast
    spec:
      containers:
        - env:
          - name: "MY_BOOTSTRAP_SERVERS"
            value: "transaction-monitor-FLAVOR-kafka-broker-0.transaction-monitor-kafka-broker.default.svc.cluster.local:9092,transaction-monitor-kafka-broker-1.transaction-monitor-kafka-broker.default.svc.cluster.local:9092,transaction-monitor-kafka-broker-2.transaction-monitor-kafka-broker.default.svc.cluster.local:9092"
          - name: "MY_NATIVE_MEGABYTES"
            value: "4400"
          - name: "MY_MYSQL_ADDRESS"
            value: "transaction-monitor-FLAVOR-mysql.default.svc.cluster.local:3306"
          - name: "MY_POSTGRES_ADDRESS"
            value: "transaction-monitor-FLAVOR-postgres.default.svc.cluster.local:5432"
          - name: "MY_PULSAR_LIST"
            value: "transaction-monitor-FLAVOR-pulsar.default.svc.cluster.local:6650"
          image: "hazelcast-platform-demos/transaction-monitor-FLAVOR-hazelcast-node-enterprise-1"
          imagePullPolicy: Never
          livenessProbe:
            # From https://github.com/hazelcast/charts/blob/master/stable/hazelcast-enterprise/values.yaml
            # Not perfect, but unlikely to do a full cluster restart
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 10
            httpGet:
              path: /hazelcast/health/node-state
              port: 5701
          name: transaction-monitor-FLAVOR-grid1-hazelcast-container
          readinessProbe:
            # Same as for livenessProbe
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 10
            httpGet:
              # Use node-state when persistent with DNS
              #path: /hazelcast/health/ready
              path: /hazelcast/health/node-state
              port: 5701
          resources:
            limits:
              cpu: "2.0"
            requests:
              cpu: "2.0"
          volumeMounts:
            - name: grid1-store
              mountPath: /data/transaction-monitor-FLAVOR/grid1
      volumes:
        - name: grid1-store
          persistentVolumeClaim:
            claimName: transaction-monitor-FLAVOR-grid1-hazelcast-pv-claim
---
---
# Creates 2 pods, DR is smaller
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: transaction-monitor-FLAVOR-grid2-hazelcast
spec:
  replicas: 2
  serviceName: transaction-monitor-FLAVOR-grid2-hazelcast
  selector:
    matchLabels:
      app: transaction-monitor-FLAVOR-grid2-hazelcast
  template:
    metadata:
      labels:
        app: transaction-monitor-FLAVOR-grid2-hazelcast
    spec:
      containers:
        - env:
          - name: "MY_BOOTSTRAP_SERVERS"
            value: "transaction-monitor-FLAVOR-kafka-broker-0.transaction-monitor-kafka-broker.default.svc.cluster.local:9092,transaction-monitor-kafka-broker-1.transaction-monitor-kafka-broker.default.svc.cluster.local:9092,transaction-monitor-kafka-broker-2.transaction-monitor-kafka-broker.default.svc.cluster.local:9092"
          - name: "MY_NATIVE_MEGABYTES"
            value: "4400"
          - name: "MY_MYSQL_ADDRESS"
            value: "transaction-monitor-FLAVOR-mysql.default.svc.cluster.local:3306"
          - name: "MY_POSTGRES_ADDRESS"
            value: "transaction-monitor-FLAVOR-postgres.default.svc.cluster.local:5432"
          - name: "MY_PULSAR_LIST"
            value: "transaction-monitor-FLAVOR-pulsar.default.svc.cluster.local:6650"
          image: "hazelcast-platform-demos/transaction-monitor-FLAVOR-hazelcast-node-enterprise-2"
          imagePullPolicy: Never
          livenessProbe:
            httpGet:
              path: /hazelcast/health/node-state
              port: 5701
          name: transaction-monitor-FLAVOR-grid2-hazelcast-container
          readinessProbe:
            # Same as for livenessProbe
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 10
            successThreshold: 1
            failureThreshold: 10
            httpGet:
              # Use node-state when persistent with DNS
              #path: /hazelcast/health/ready
              path: /hazelcast/health/node-state
              port: 5701
          resources:
            limits:
              cpu: "2.0"
            requests:
              cpu: "2.0"
          volumeMounts:
            - name: grid2-store
              mountPath: /data/transaction-monitor-FLAVOR/grid2
      volumes:
        - name: grid2-store
          persistentVolumeClaim:
            claimName: transaction-monitor-FLAVOR-grid2-hazelcast-pv-claim
---
---
# Only need 1 management-center
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: transaction-monitor-FLAVOR-management-center
spec:
  selector:
    matchLabels:
      app: transaction-monitor-FLAVOR-management-center
  template:
    metadata:
      labels:
        app: transaction-monitor-FLAVOR-management-center
    spec:
      containers:
        - image: "hazelcast-platform-demos/transaction-monitor-FLAVOR-management-center"
          imagePullPolicy: Never
          livenessProbe:
            httpGet:
              path: /health
              port: 8081
          name: transaction-monitor-FLAVOR-management-center-container
          readinessProbe:
            httpGet:
              path: /health
              port: 8081
            initialDelaySeconds: 30
---
# Service for Prometheus
---
apiVersion: v1
kind: Service
metadata:
  name: transaction-monitor-FLAVOR-prometheus
spec:
  selector:
    app: transaction-monitor-FLAVOR-prometheus
  ports:
    - name: prometheus
      port: 9090
      targetPort: 9090
  type: LoadBalancer
---
# Pods for Prometheus, only need one
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: transaction-monitor-FLAVOR-prometheus
spec:
  selector:
    matchLabels:
      app: transaction-monitor-FLAVOR-prometheus
  template:
    metadata:
      labels:
        app: transaction-monitor-FLAVOR-prometheus
    spec:
      containers:
        - image: "hazelcast-platform-demos/transaction-monitor-FLAVOR-prometheus"
          imagePullPolicy: Never
          name: transaction-monitor-FLAVOR-prometheus-container
---
# Service for Grafana
---
apiVersion: v1
kind: Service
metadata:
  name: transaction-monitor-FLAVOR-grafana
spec:
  selector:
    app: transaction-monitor-FLAVOR-grafana
  ports:
    - name: grafana
      port: 80
      targetPort: 3000
  type: LoadBalancer
---
# Pods for Grafana, only need one
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: transaction-monitor-FLAVOR-grafana
spec:
  selector:
    matchLabels:
      app: transaction-monitor-FLAVOR-grafana
  template:
    metadata:
      labels:
        app: transaction-monitor-FLAVOR-grafana
    spec:
      containers:
        - image: "hazelcast-platform-demos/transaction-monitor-FLAVOR-grafana"
          imagePullPolicy: Never
          name: transaction-monitor-FLAVOR-grafana-container
---
