// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: JetToCpp.proto

#include "../include/JetToCpp.pb.h"

#include <algorithm>

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/wire_format_lite.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)
#include <google/protobuf/port_def.inc>
namespace com_hazelcast_platform_demos_banking_cva {
class InputMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<InputMessage> _instance;
} _InputMessage_default_instance_;
class OutputMessageDefaultTypeInternal {
 public:
  ::PROTOBUF_NAMESPACE_ID::internal::ExplicitlyConstructed<OutputMessage> _instance;
} _OutputMessage_default_instance_;
}  // namespace com_hazelcast_platform_demos_banking_cva
static void InitDefaultsscc_info_InputMessage_JetToCpp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com_hazelcast_platform_demos_banking_cva::_InputMessage_default_instance_;
    new (ptr) ::com_hazelcast_platform_demos_banking_cva::InputMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com_hazelcast_platform_demos_banking_cva::InputMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_InputMessage_JetToCpp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_InputMessage_JetToCpp_2eproto}, {}};

static void InitDefaultsscc_info_OutputMessage_JetToCpp_2eproto() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  {
    void* ptr = &::com_hazelcast_platform_demos_banking_cva::_OutputMessage_default_instance_;
    new (ptr) ::com_hazelcast_platform_demos_banking_cva::OutputMessage();
    ::PROTOBUF_NAMESPACE_ID::internal::OnShutdownDestroyMessage(ptr);
  }
  ::com_hazelcast_platform_demos_banking_cva::OutputMessage::InitAsDefaultInstance();
}

::PROTOBUF_NAMESPACE_ID::internal::SCCInfo<0> scc_info_OutputMessage_JetToCpp_2eproto =
    {{ATOMIC_VAR_INIT(::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase::kUninitialized), 0, 0, InitDefaultsscc_info_OutputMessage_JetToCpp_2eproto}, {}};

static ::PROTOBUF_NAMESPACE_ID::Metadata file_level_metadata_JetToCpp_2eproto[2];
static constexpr ::PROTOBUF_NAMESPACE_ID::EnumDescriptor const** file_level_enum_descriptors_JetToCpp_2eproto = nullptr;
static constexpr ::PROTOBUF_NAMESPACE_ID::ServiceDescriptor const** file_level_service_descriptors_JetToCpp_2eproto = nullptr;

const ::PROTOBUF_NAMESPACE_ID::uint32 TableStruct_JetToCpp_2eproto::offsets[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com_hazelcast_platform_demos_banking_cva::InputMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com_hazelcast_platform_demos_banking_cva::InputMessage, inputvalue_),
  ~0u,  // no _has_bits_
  PROTOBUF_FIELD_OFFSET(::com_hazelcast_platform_demos_banking_cva::OutputMessage, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  PROTOBUF_FIELD_OFFSET(::com_hazelcast_platform_demos_banking_cva::OutputMessage, outputvalue_),
};
static const ::PROTOBUF_NAMESPACE_ID::internal::MigrationSchema schemas[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::com_hazelcast_platform_demos_banking_cva::InputMessage)},
  { 6, -1, sizeof(::com_hazelcast_platform_demos_banking_cva::OutputMessage)},
};

static ::PROTOBUF_NAMESPACE_ID::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com_hazelcast_platform_demos_banking_cva::_InputMessage_default_instance_),
  reinterpret_cast<const ::PROTOBUF_NAMESPACE_ID::Message*>(&::com_hazelcast_platform_demos_banking_cva::_OutputMessage_default_instance_),
};

const char descriptor_table_protodef_JetToCpp_2eproto[] PROTOBUF_SECTION_VARIABLE(protodesc_cold) =
  "\n\016JetToCpp.proto\022(com_hazelcast_platform"
  "_demos_banking_cva\"\"\n\014InputMessage\022\022\n\nin"
  "putValue\030\001 \003(\t\"$\n\rOutputMessage\022\023\n\013outpu"
  "tValue\030\001 \003(\t2\223\001\n\010JetToCpp\022\206\001\n\rstreamingC"
  "all\0226.com_hazelcast_platform_demos_banki"
  "ng_cva.InputMessage\0327.com_hazelcast_plat"
  "form_demos_banking_cva.OutputMessage\"\000(\001"
  "0\001B,\n(com.hazelcast.platform.demos.banki"
  "ng.cvaP\001b\006proto3"
  ;
static const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable*const descriptor_table_JetToCpp_2eproto_deps[1] = {
};
static ::PROTOBUF_NAMESPACE_ID::internal::SCCInfoBase*const descriptor_table_JetToCpp_2eproto_sccs[2] = {
  &scc_info_InputMessage_JetToCpp_2eproto.base,
  &scc_info_OutputMessage_JetToCpp_2eproto.base,
};
static ::PROTOBUF_NAMESPACE_ID::internal::once_flag descriptor_table_JetToCpp_2eproto_once;
static bool descriptor_table_JetToCpp_2eproto_initialized = false;
const ::PROTOBUF_NAMESPACE_ID::internal::DescriptorTable descriptor_table_JetToCpp_2eproto = {
  &descriptor_table_JetToCpp_2eproto_initialized, descriptor_table_protodef_JetToCpp_2eproto, "JetToCpp.proto", 336,
  &descriptor_table_JetToCpp_2eproto_once, descriptor_table_JetToCpp_2eproto_sccs, descriptor_table_JetToCpp_2eproto_deps, 2, 0,
  schemas, file_default_instances, TableStruct_JetToCpp_2eproto::offsets,
  file_level_metadata_JetToCpp_2eproto, 2, file_level_enum_descriptors_JetToCpp_2eproto, file_level_service_descriptors_JetToCpp_2eproto,
};

// Force running AddDescriptors() at dynamic initialization time.
static bool dynamic_init_dummy_JetToCpp_2eproto = (  ::PROTOBUF_NAMESPACE_ID::internal::AddDescriptors(&descriptor_table_JetToCpp_2eproto), true);
namespace com_hazelcast_platform_demos_banking_cva {

// ===================================================================

void InputMessage::InitAsDefaultInstance() {
}
class InputMessage::_Internal {
 public:
};

InputMessage::InputMessage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com_hazelcast_platform_demos_banking_cva.InputMessage)
}
InputMessage::InputMessage(const InputMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      inputvalue_(from.inputvalue_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com_hazelcast_platform_demos_banking_cva.InputMessage)
}

void InputMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_InputMessage_JetToCpp_2eproto.base);
}

InputMessage::~InputMessage() {
  // @@protoc_insertion_point(destructor:com_hazelcast_platform_demos_banking_cva.InputMessage)
  SharedDtor();
}

void InputMessage::SharedDtor() {
}

void InputMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const InputMessage& InputMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_InputMessage_JetToCpp_2eproto.base);
  return *internal_default_instance();
}


void InputMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:com_hazelcast_platform_demos_banking_cva.InputMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  inputvalue_.Clear();
  _internal_metadata_.Clear();
}

const char* InputMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string inputValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_inputvalue();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com_hazelcast_platform_demos_banking_cva.InputMessage.inputValue"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* InputMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com_hazelcast_platform_demos_banking_cva.InputMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string inputValue = 1;
  for (int i = 0, n = this->_internal_inputvalue_size(); i < n; i++) {
    const auto& s = this->_internal_inputvalue(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com_hazelcast_platform_demos_banking_cva.InputMessage.inputValue");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com_hazelcast_platform_demos_banking_cva.InputMessage)
  return target;
}

size_t InputMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com_hazelcast_platform_demos_banking_cva.InputMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string inputValue = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(inputvalue_.size());
  for (int i = 0, n = inputvalue_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      inputvalue_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void InputMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com_hazelcast_platform_demos_banking_cva.InputMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const InputMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<InputMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com_hazelcast_platform_demos_banking_cva.InputMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com_hazelcast_platform_demos_banking_cva.InputMessage)
    MergeFrom(*source);
  }
}

void InputMessage::MergeFrom(const InputMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com_hazelcast_platform_demos_banking_cva.InputMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  inputvalue_.MergeFrom(from.inputvalue_);
}

void InputMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com_hazelcast_platform_demos_banking_cva.InputMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void InputMessage::CopyFrom(const InputMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com_hazelcast_platform_demos_banking_cva.InputMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool InputMessage::IsInitialized() const {
  return true;
}

void InputMessage::InternalSwap(InputMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  inputvalue_.InternalSwap(&other->inputvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata InputMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// ===================================================================

void OutputMessage::InitAsDefaultInstance() {
}
class OutputMessage::_Internal {
 public:
};

OutputMessage::OutputMessage()
  : ::PROTOBUF_NAMESPACE_ID::Message(), _internal_metadata_(nullptr) {
  SharedCtor();
  // @@protoc_insertion_point(constructor:com_hazelcast_platform_demos_banking_cva.OutputMessage)
}
OutputMessage::OutputMessage(const OutputMessage& from)
  : ::PROTOBUF_NAMESPACE_ID::Message(),
      _internal_metadata_(nullptr),
      outputvalue_(from.outputvalue_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:com_hazelcast_platform_demos_banking_cva.OutputMessage)
}

void OutputMessage::SharedCtor() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&scc_info_OutputMessage_JetToCpp_2eproto.base);
}

OutputMessage::~OutputMessage() {
  // @@protoc_insertion_point(destructor:com_hazelcast_platform_demos_banking_cva.OutputMessage)
  SharedDtor();
}

void OutputMessage::SharedDtor() {
}

void OutputMessage::SetCachedSize(int size) const {
  _cached_size_.Set(size);
}
const OutputMessage& OutputMessage::default_instance() {
  ::PROTOBUF_NAMESPACE_ID::internal::InitSCC(&::scc_info_OutputMessage_JetToCpp_2eproto.base);
  return *internal_default_instance();
}


void OutputMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:com_hazelcast_platform_demos_banking_cva.OutputMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  outputvalue_.Clear();
  _internal_metadata_.Clear();
}

const char* OutputMessage::_InternalParse(const char* ptr, ::PROTOBUF_NAMESPACE_ID::internal::ParseContext* ctx) {
#define CHK_(x) if (PROTOBUF_PREDICT_FALSE(!(x))) goto failure
  while (!ctx->Done(&ptr)) {
    ::PROTOBUF_NAMESPACE_ID::uint32 tag;
    ptr = ::PROTOBUF_NAMESPACE_ID::internal::ReadTag(ptr, &tag);
    CHK_(ptr);
    switch (tag >> 3) {
      // repeated string outputValue = 1;
      case 1:
        if (PROTOBUF_PREDICT_TRUE(static_cast<::PROTOBUF_NAMESPACE_ID::uint8>(tag) == 10)) {
          ptr -= 1;
          do {
            ptr += 1;
            auto str = _internal_add_outputvalue();
            ptr = ::PROTOBUF_NAMESPACE_ID::internal::InlineGreedyStringParser(str, ptr, ctx);
            CHK_(::PROTOBUF_NAMESPACE_ID::internal::VerifyUTF8(str, "com_hazelcast_platform_demos_banking_cva.OutputMessage.outputValue"));
            CHK_(ptr);
            if (!ctx->DataAvailable(ptr)) break;
          } while (::PROTOBUF_NAMESPACE_ID::internal::ExpectTag<10>(ptr));
        } else goto handle_unusual;
        continue;
      default: {
      handle_unusual:
        if ((tag & 7) == 4 || tag == 0) {
          ctx->SetLastTag(tag);
          goto success;
        }
        ptr = UnknownFieldParse(tag, &_internal_metadata_, ptr, ctx);
        CHK_(ptr != nullptr);
        continue;
      }
    }  // switch
  }  // while
success:
  return ptr;
failure:
  ptr = nullptr;
  goto success;
#undef CHK_
}

::PROTOBUF_NAMESPACE_ID::uint8* OutputMessage::_InternalSerialize(
    ::PROTOBUF_NAMESPACE_ID::uint8* target, ::PROTOBUF_NAMESPACE_ID::io::EpsCopyOutputStream* stream) const {
  // @@protoc_insertion_point(serialize_to_array_start:com_hazelcast_platform_demos_banking_cva.OutputMessage)
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated string outputValue = 1;
  for (int i = 0, n = this->_internal_outputvalue_size(); i < n; i++) {
    const auto& s = this->_internal_outputvalue(i);
    ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::VerifyUtf8String(
      s.data(), static_cast<int>(s.length()),
      ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::SERIALIZE,
      "com_hazelcast_platform_demos_banking_cva.OutputMessage.outputValue");
    target = stream->WriteString(1, s, target);
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    target = ::PROTOBUF_NAMESPACE_ID::internal::WireFormat::InternalSerializeUnknownFieldsToArray(
        _internal_metadata_.unknown_fields(), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:com_hazelcast_platform_demos_banking_cva.OutputMessage)
  return target;
}

size_t OutputMessage::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:com_hazelcast_platform_demos_banking_cva.OutputMessage)
  size_t total_size = 0;

  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  // repeated string outputValue = 1;
  total_size += 1 *
      ::PROTOBUF_NAMESPACE_ID::internal::FromIntSize(outputvalue_.size());
  for (int i = 0, n = outputvalue_.size(); i < n; i++) {
    total_size += ::PROTOBUF_NAMESPACE_ID::internal::WireFormatLite::StringSize(
      outputvalue_.Get(i));
  }

  if (PROTOBUF_PREDICT_FALSE(_internal_metadata_.have_unknown_fields())) {
    return ::PROTOBUF_NAMESPACE_ID::internal::ComputeUnknownFieldsSize(
        _internal_metadata_, total_size, &_cached_size_);
  }
  int cached_size = ::PROTOBUF_NAMESPACE_ID::internal::ToCachedSize(total_size);
  SetCachedSize(cached_size);
  return total_size;
}

void OutputMessage::MergeFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:com_hazelcast_platform_demos_banking_cva.OutputMessage)
  GOOGLE_DCHECK_NE(&from, this);
  const OutputMessage* source =
      ::PROTOBUF_NAMESPACE_ID::DynamicCastToGenerated<OutputMessage>(
          &from);
  if (source == nullptr) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:com_hazelcast_platform_demos_banking_cva.OutputMessage)
    ::PROTOBUF_NAMESPACE_ID::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:com_hazelcast_platform_demos_banking_cva.OutputMessage)
    MergeFrom(*source);
  }
}

void OutputMessage::MergeFrom(const OutputMessage& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:com_hazelcast_platform_demos_banking_cva.OutputMessage)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::PROTOBUF_NAMESPACE_ID::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  outputvalue_.MergeFrom(from.outputvalue_);
}

void OutputMessage::CopyFrom(const ::PROTOBUF_NAMESPACE_ID::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:com_hazelcast_platform_demos_banking_cva.OutputMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void OutputMessage::CopyFrom(const OutputMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:com_hazelcast_platform_demos_banking_cva.OutputMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool OutputMessage::IsInitialized() const {
  return true;
}

void OutputMessage::InternalSwap(OutputMessage* other) {
  using std::swap;
  _internal_metadata_.Swap(&other->_internal_metadata_);
  outputvalue_.InternalSwap(&other->outputvalue_);
}

::PROTOBUF_NAMESPACE_ID::Metadata OutputMessage::GetMetadata() const {
  return GetMetadataStatic();
}


// @@protoc_insertion_point(namespace_scope)
}  // namespace com_hazelcast_platform_demos_banking_cva
PROTOBUF_NAMESPACE_OPEN
template<> PROTOBUF_NOINLINE ::com_hazelcast_platform_demos_banking_cva::InputMessage* Arena::CreateMaybeMessage< ::com_hazelcast_platform_demos_banking_cva::InputMessage >(Arena* arena) {
  return Arena::CreateInternal< ::com_hazelcast_platform_demos_banking_cva::InputMessage >(arena);
}
template<> PROTOBUF_NOINLINE ::com_hazelcast_platform_demos_banking_cva::OutputMessage* Arena::CreateMaybeMessage< ::com_hazelcast_platform_demos_banking_cva::OutputMessage >(Arena* arena) {
  return Arena::CreateInternal< ::com_hazelcast_platform_demos_banking_cva::OutputMessage >(arena);
}
PROTOBUF_NAMESPACE_CLOSE

// @@protoc_insertion_point(global_scope)
#include <google/protobuf/port_undef.inc>
